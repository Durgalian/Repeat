/* /* .Psina{
    font: bold;
    font-size:larger;
    font-style: unset;
    font-weight: bold;
            color: #f46; }
 */
.PsinaH1{
    font-style: oblique;
    color: black;
}

/* 3 Способа подключить css
1. Inline когда мы с помощью тэга стайл задаем какие то свойства прям в html
Или через атрибут стайл 
<header style="border: 1 px solid grey"
Атрибут style может быть применим к любому html коду, который является видимым
Который находится в тэге body
1.Первый подход через атрибут, 2.второй это когда описываем css код уже в тэге style
Тэг стайл надо писать в сексии head, тогда как атрибут в бади

<style>
body{backround: #ddd}
header{border: 1 px solid grey}

</style>

3. самый частый способ, подключения отдельно через css
Для этого в сексии head прописываем тэг link где указываем название нашего css
stylesheet - язык разметки стилей


> */

h3 {
    color: red;
}

/* Первый тип селектра по тегу 1.Tag */

/* body{
    background-color: aliceblue;
} */


 /* Второй по классу 2.Class
 Мы в html указали класс их два, допустим и если мы их хотим стилизовать, пищем
 . и название класс {} */
/* Также, допустим, если у нас название класса из двух слов и первые слова одинаковые, мы можем указать его и стилизовать сразу два или 3 класса например где первое слово такое же
Или же указать второе слово и стилизовать классы отдельно */

body
{background: antiquewhite;
     font-family: "Montserrat", sans-serif;
color: #008080;
    }

@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Playwrite+RO:wght@100..400&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');


/* Шрифты
Fonts Google
 */




 .card{
    padding: 10px;
    background: white;
    margin-bottom: 10px;
 }

 /* Третий редкий тип селектра по ID 3.ID 
 Для этого мы прописываем # и далее название ID который нам надо*/

 #header{
    background-color: burlywood;
    padding: 10px;
 }

.html{
   background: orange;
   color: white;
}
.css{
    background: green;
    color: white;
}

/* Еще один тип селектра, когда мы обращаемся от родительского тега к дочернему
Допустим если в тэге где класс card есть какой то параграф и мы хотим его стилизовать
То мы пишем 
.card и через пробел название того тэга, напрример <p> */
/* И это второе название может быть любим селектром: тэг, класс, id и тд */


.card p {
  font-size: 20px;  
}

/* Дальше - 4.это множественные селектры
 */

 #header, .card, .html, .css{
    margin-bottom: 10px;
 }


 /* Можем комбинировать селектры по наследованию и множественные */
 /* Последний тип уникальный - это Звездочка 5.*
 Он обращается абсолютно ко всем элементам */


 /* *{

 } */



 .html, .css{
    font-family: "Playwrite GB S", cursive;
    font-optical-sizing: auto;
  font-weight: <weight>;
   font-style: normal; /*Типа курсив  em в html */
  /* font-size: 10px; 
  line-height: 20px или 1.6em; Это высота линии*/
 /* text-decoration: underline; - Декорации для текста
  letter-spacing:10px; Расстояние между символами
  word-spacing: Отступы уже между словами */
}



 @import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Playwrite+GB+S:ital,wght@0,100..400;1,100..400&family=Playwrite+RO:wght@100..400&family=Reggae+One&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

 /* 
 Чтобы добавить шрифт
 заходим на Google fonts там выбираем шрифт, переходим на imlort
 копируем все, что начиная с @ и вставляем просто в css можем и свойства вставить */

 /* Свойства font-family, size, weight можно обьединить в одно, чтобы было быстрее и проще писать:
 Пишем
 font: normal 10px 'Roboto' */

 /* Для шрифтов обычно используются отдельные свойства, потому что ими легче управлять так
 Чем больше общий стиль, тем меньше у него приоритет
 Сначала будут выполнять более конктретные стили к конкретным блокам
 Например .card а не общий body */

 .info-text p {
    font-style: italic;
    font-weight: bold;
    color: #9acd32;
 }



.color-1{
  color:#9f8c24;  
}
/* Этот код написан в 16ризчной системе зимерения
Шифр RGB то есть ReadGreenBlue 
Первые 2 значения красный, потом зеленый и синий
Диапазон от 0 до ff*/
/* Можно использовать сокращеную запись в 3 символа #000 */

.color-2{
    color: darkgreen;
}
/* css colors в браузере чтобы выбрать цвет какой то */

.color-3{
    color: #ae3a3a;
}

.color-4    
{
color: rgb(16, 44, 144);
}

/* Еще способ задать цвет просто пишем rgb(0, 6, 7); */
/* Только теперь используем не 16 ричную систему а чилса 
от 0 до 255 */

.color-5    
{
color: rgba(60, 144, 50, 0.9);
/* opacity: 0.8 ; */
}
/* Еще способ rgba похож на rgb, но уже есть 4 параметр и это Opacity то есть прозрачность текста
 Она идет от 0 до 1
 Также можем просто прописать свойство opacity: 0.6;*/









 /* Границы */
 /* Три основных свойства, чтобы задавать границу */
 .border-1{
border-width: 2px;
border-style: solid;  /* dashed*/
border-color: #ae3a3a;
/* Можно обьеденить все в одно */
/* border: 2px solid darkred   ;  порядок важен*/
 /* Для кажого эллемента у которого есть граница можно задавать ее радиус */
 border-radius: 6.6px ;  /* Можно указывать как пиксели так и проценты % */
}

/* Можем создавать границу не только вокруг всего эллемента, но и точенно как хоти, допустим только нижняя или справа или слева */
 /*bottom,top,right,left  */

.border-2{
  border-bottom: 2px dashed rgb(0, 3, 100);  
 border-left: 4px solid rgb(218, 167, 13);
/* Также точечно можно управлять и радиусом для этих границ */
border-bottom-left-radius: 9px ;
}



 .border-3{
   border-left: 6px solid #ae3a3a ; 
   background: lightsalmon;
   padding-left: 4px;
   color: rgb(15, 39, 220);
 }

 .hobbie{
   border: 1px solid black;
   border-radius: 20px;
   background: #008080; 
   color: #3f0531;
   padding-left: 6px;
}

.back2{
    border: 1px solid black;
   border-radius: 20px;
   background: #97970c; 
   color: #c60f52;
   padding-left: 6px;
   
}

.back3{
    border: 1px solid black;
    border-radius: 20px;
    background: #0c3669; 
    color: #bf911e;
    padding-left: 14px;
    padding-top: 14px;
    padding-bottom: 8px;
}
.back5{
    border: 1px solid black;
    border-radius: 20px;
    background: #ecaa04; 
    color: #8f1293;
    padding-left: 6px;
    
}


.back6{
    border: 1px solid black;
    border-radius: 20px;
    background: #2a9946; 
    color: #a74f0b;
    padding: 6px;
    
   
}

/* Margin-bottom это отступ между карточками типа br лучше всегда его добавлять чтобы структра сайта не была нарушена, а если использовать margin-top, то если убрать какой то элемент структура может быть нарушена */

/* Также мы можем просто создать один универсальный класс
Допустим создаем сласс card и далее нему далее style1
потом класс card и к нему style 2
И тд и так мы можем отдельно стилизовать каждую карточку
А потом если захотим довать куда то к какому то классу style 1 или 2 и тд то этот класс сразу же будет стилизовать, так как мы уже стилизовали его для класс card */

.container{
   max-width: 750px;
   margin: auto ; 
   padding-top: 30px;
}
.avatar{
    width: 300px;
    border-radius: 28px;
    box-shadow: 4px 4px 14px rgba(0, 0, 0 , .25);
}



/* Ссылки */
/* Все ссылки стилизуем через тэг a */

a{
    color: #026f16 ;
    text-decoration: none;
    transition: all .6s; /* Замедленная анимация */
 cursor: pointer;  /*Теперь будет понятно, что это кликабельный элемент */
}

/* Псевдо селектры

a:hover{} Hover - Это когда мы наводим курсор на какой то элемент
Псевдо селектры мы пишем а и дальше через : указываем а какое состояние мы хотим обработать */

a:hover{
    color:#3f0531;
    font-size: 1.5rem;
    opacity: 0.8; /* Теперь если навести курсор будет меняться прозрачность */
    text-decoration: underline;
}

/* Теперь когда мы будем наводить курсор на ссылку она будет менять цвет и размер */

/* Псевдо селектр только для ссылок */
a:visited{
 color: #8f1293;   
}
/* После этого если мы перейдем по ссылке, то она поменяет цвет */

a:active{
    color: #2a9946;
}

.btn{
    background: #111;
    padding: 15px 20px;
    color: #b32121;
    border: none;
    font-family: inherit; /* Это значит что шрифты будут наследоваться от тех, что мы уже указали */
cursor: pointer;
}
.btn:hover{
    opacity: 0.8;
}

/* Списки и таблицы */
/* Обычно когда работает со списками мы обнуляем и margin и padding для того, чтобы в дальнейшем мы сами могли 
задавать эти значения  */

.list{
    margin: 0;
    padding: 0;
    list-style: none;

}

.list li{
    margin-bottom: 10px ;
    border-bottom: 1px solid rgb(224, 14, 49);
}

.table{
    width: 100%;

}

.table td{
     text-align: center; /*Выравнивание по центру */
padding-bottom: 10px;
}

.table td:hover{
     background: #0c3669; /*Будет меняться цвет при наведении */

}

/* Допустим мы хотим чтобы каждый четный столбик или строчки там подсвечивался чем то при наведении
Для того, чтобы это рнализовать есть дополнительные псевдо селектры */

.table tr:nth-child(even) {
     background: #97970c;  /*Тут каждая четная стречка выделяется */
}

.table tr:nth-child(odd) {
    background: #0ac3b7;  /*Тут каждая нечетная стречка выделяется */
}

/* Столбики */
/* Допустим мы хотим чтобы 2 и 4 столбики по своему подсвечивались */

.table td:nth-child(2){
    background: #8f1293;
}
.table td:nth-child(4){
    background: #830f0f;
}

.navbar{
    background: #57a3a3;
    /* padding: 10px 20px; */
    margin-bottom: 10px;
}

.navbar ul{
list-style: none; /*Чтобы убрать точечки */
    margin: 0;
    padding: 0  ;
    display: flex;  /*Чтобы ссылки шли в одну линию */
padding: 0px 20px;
}

.navbar ul li{
    margin-right: 10px;
    padding: 10px
}

/* Чтобы при наведении на ссылку менялся фон */

.navbar ul li:hover{
    background: #e04604;
}

navbar ul li:last-child
 {margin-right:0 ;} /*Этим псевдо-селектром мы обращаемся к последнему элементу и убираем отступ у него */

 .list{
   padding: 0 20PX; 
 }
 .list li{
    color: #2c14db;
margin-bottom: 10px;
 }
   
 .link{
    list-style: none;
    padding: 0;
 }

 .link li{
    margin-bottom: 10px;
    border-bottom: 1px solid #800972;
    padding-bottom: 5px;
 }

 /* Дисплей */

 /* inline, block, inline-block */

 .inline{
    display: flex; /*Все в одну линию */
 list-style: none;

}

 /* Мы могли бы еще написать так
 inline{
    display: inline; Все в одну линию
 }
 Но результата не будет, так как чтобы выровнять каждый элемент списка, нужно братиться именно к нему
 то есть 
 inline li{
    display: inline; Все в одну линию
 } */


 /* Inline-block */

 .box{
    width: 15%;
    border: 1px solid black;
    background: #0c3669;
    display: inline-block;
    box-sizing: border-box;
 }

 /* Block */

 .img{
    width: 200px;
     margin: 40px auto; /*Теперь она будет по центру*/
 display: block;
    } 
/* Мы добавили значение display block для того чтобы картинка была по центру
потому что если это изначально inline элемент, линецный типа ссылка, картинка
мы не можем зажавать ему нужный margin
Поэтому мы с помощью css меняем ему поведение на block */

/* Стилизуем форму, ее на этом сайте нет

.form h2{
    text-align: center; Заголовок будет по центру
}
.form-group label{
display: block-size: ;
font-size: 14px;
}

.form-group input,.form-group textarea {
    width: 100%;
    box-sizing:  border-box;
    border: none;
    background: transparent;
    border-bottom: 1px solid #ccc;
    color: #000;
    padding: 15px o 10px;
    outline: none;
    font-family: inherit;

}

.form-row{
margin-bottom: 10px;
margin-right: 20px;
width: calc(50% - 20px);
}
.form-row .form-group{
    display: inline-block;
}
.form-row .form-group:last-child[
margin-right: 0;
]
Но можно сделать еще удачнее, чтобы все поместилось
для этого в 
.form-row нужно убрать calc а в .form-row .form-group{
    display: inline-block; и вместо этого использовать в 
    .form-row нужно использовать 
    display: flex;
    а в .form-row .form-group указать 
    width: 50%
    То есть так
    .form-row{
        margin-bottom: 10px;
        display: flex;
        }
        .form-row .form-group{
           margin-right: 20px;
           width: 50%;
        }
        .form-row .form-group:last-child[
        margin-right: 0; */

        /* .info{
            display: flex;
        }
        .info-text{
            margin-left: 40px;
        } */

         .info-text{
            display: flex;
         }





         /* Position, top, right, bottom, left и z-index. */

         .playground{
            border: 4px solid black;
            height: 300px;
            padding: 20px;
            position: relative;

         }

        .pos-box{
           /* position: static;  */
            position: absolute;
            /* Если мы используем absolute то нам открываются 4 новых свойства 
            top right left bottom */
            top: 0;
            left: 0;
            /* Когда мы используем абсолют мы можем управлять расположением элемента */
          /* В playground мы указали позитион relative а в pos-box ablosute и два значения top и left в 0.
          Теперь наш квадратик будет вверхнем углу нашей границы, а не в верхнем углу страницы, потому что в playgroud у нас стоит relative */
            width: 50px;
            height: 50px;
            background: coral;
            /* position: fixed  теперь наш элемент всегда будет следовать за экраном. Если мы еще укажем top:0 то он всегда будет следовать за скролингом вверху экрана*/
        } 
        /* z-index: 2; Показывает например насколько слонв выше наш элемент будет,чем другие. Например чтобы распологать одни элементы выше других */

        .navbar{
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 2;
        }
        .container{
            margin-top: 20px;
        }


        /* Media адаптивная верстка */

        .media{
            max-width: 750px;
            padding-top: 20px;
            margin: auto;
        }
        .media2{
            padding: 20px;
            background: #24026f;
            font-size: 2rem;
        }
        @media(max-width: 500px) {
            .media2{
            font-size: 1.5rem;
            padding: 10px;
            text-align: center;}
        }